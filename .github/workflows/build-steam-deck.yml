name: RetroFE Steam Deck Build (AppImage)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Install dependencies for building AppImage
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          dos2unix \
          git \
          sdl2 \
          sdl2-image \
          sdl2-mixer \
          sdl2-ttf \
          gstreamer \
          libgstreamer-plugins-base1.0-dev \
          libgstreamer-plugins-good1.0-dev \
          libgstreamer-plugins-good1.0 \
          libz-dev \
          sqlite3 \
          wget \
          libglib2.0-dev \
          libc6-dev \
          libssl-dev \
          libfuse-dev \
          python3 \
          patchelf \
          squashfs-tools

    # Download and install linuxdeploy
    - name: Install linuxdeploy
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
        mv linuxdeploy-x86_64.AppImage /usr/local/bin/linuxdeploy

    # Build the project using CMake
    - name: Build with CMake
      run: |
        cmake RetroFE/Source -BRetroFE/Build
        cmake --build RetroFE/Build

    # Package the build as an AppImage
    - name: Create AppImage
      run: |
        # Set up the AppDir (AppImage directory structure)
        mkdir -p AppDir/usr/bin
        cp -r RetroFE/Build/* AppDir/usr/bin/

        # Run linuxdeploy to create the AppImage
        /usr/local/bin/linuxdeploy --appdir AppDir --output appimage

    # Upload the AppImage to GitHub Releases
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: RetroFE Steam Deck Build - ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload AppImage Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: RetroFE-SteamDeck.AppImage
        asset_name: RetroFE-SteamDeck.AppImage
        asset_content_type: application/octet-stream
